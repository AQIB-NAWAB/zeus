{"version":3,"names":["_debug","_interopRequireDefault","require","obj","__esModule","default","_defineProperty","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","t","i","_toPrimitive","String","r","e","Symbol","toPrimitive","call","TypeError","Number","LogLevel","exports","Logger","constructor","levelToOutput","namespace","message","args","_log","debug","info","warn","error","_levelToOutput","_logger","fromEnv","level","none","prefix","keys","reduce","prev","curr","log","grpcLog","actionLog"],"sources":["log.ts"],"sourcesContent":["import debug, { Debugger } from 'debug';\n\nexport enum LogLevel {\n    debug = 1,\n    info = 2,\n    warn = 3,\n    error = 4,\n    none = 5\n}\n\n/**\n * A logger class with support for multiple namespaces and log levels.\n */\nexport class Logger {\n    private _levelToOutput: LogLevel;\n    private _logger: Debugger;\n\n    constructor(levelToOutput: LogLevel, namespace: string) {\n        this._levelToOutput = levelToOutput;\n        this._logger = debug(namespace);\n    }\n\n    /**\n     * creates a new Logger instance by inspecting the executing environment\n     */\n    static fromEnv(namespace: string): Logger {\n        // by default, log nothing (assuming prod)\n        const level = LogLevel.none;\n        return new Logger(level, namespace);\n    }\n\n    /**\n     * log a debug message\n     */\n    debug = (message: string, ...args: any[]) =>\n        this._log(LogLevel.debug, message, args);\n\n    /**\n     * log an info message\n     */\n    info = (message: string, ...args: any[]) =>\n        this._log(LogLevel.info, message, args);\n\n    /**\n     * log a warn message\n     */\n    warn = (message: string, ...args: any[]) =>\n        this._log(LogLevel.warn, message, args);\n\n    /**\n     * log an error message\n     */\n    error = (message: string, ...args: any[]) =>\n        this._log(LogLevel.error, message, args);\n\n    /**\n     * A shared logging function which will only output logs based on the level of this Logger instance\n     * @param level the level of the message being logged\n     * @param message the message to log\n     * @param args optional additional arguments to log\n     */\n    private _log(level: LogLevel, message: string, args: any[]) {\n        // don't log if the level to output is greater than the level of this message\n        if (this._levelToOutput > level) return;\n\n        // convert the provided log level number to the string name\n        const prefix = Object.keys(LogLevel).reduce(\n            (prev, curr) =>\n                level === LogLevel[curr as keyof typeof LogLevel] ? curr : prev,\n            '??'\n        );\n\n        this._logger(`[${prefix}] ${message}`, ...args);\n    }\n}\n\n/**\n * the main logger for the app\n */\nexport const log = Logger.fromEnv('main');\n\n/**\n * the logger for GRPC requests and responses\n */\nexport const grpcLog = Logger.fromEnv('grpc');\n\n/**\n * the logger for state updates via mobx actions\n */\nexport const actionLog = Logger.fromEnv('action');\n"],"mappings":"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"}